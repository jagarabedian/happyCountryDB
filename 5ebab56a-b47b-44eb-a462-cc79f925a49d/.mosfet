{
  "layout": "Map",
  "image": "image.png",
  "rdbmsId": "5ebab56a-b47b-44eb-a462-cc79f925a49d",
  "hidden": false,
  "engine": "happyCountryDB",
  "insightName": "World Happiness Map",
  "recipe": "AddPanel ( 0 ) ;Panel ( 0 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eUnfilterFrame(\u003cSelectedColumn\u003e);\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabledVisuals\" : [ \"Grid\" ] , \"disabled\" : false } ] } , \"onBrush\" : { \"Filter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eif(IsEmpty(\u003cSelectedValues\u003e), UnfilterFrame(\u003cSelectedColumn\u003e), SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabled\" : false } ] } } ) ;Panel ( 0 ) | RetrievePanelEvents ( ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"echarts\"}\u003c/encode\u003e\" ) ;Panel ( 0 ) | SetPanelView ( \"federate-view\" , \"\u003cencode\u003e{\"core_engine\":\"happyCountryDB\"}\u003c/encode\u003e\" ) ;CreateFrame ( grid ) .as ( [ \u0027FRAME882187\u0027 ] ) ;Database ( happyCountryDB ) | Select ( Country , Country__Dystopia_Residual , Country__Economy_GDP_per_Capita , Country__Family , Country__Freedom , Country__Generosity , Country__Happiness_Rank , Country__Happiness_Score , Country__Health_Life_Expectancy , Country__Region , Country__Standard_Error , Country__Trust_Government_Corruption , Country__Year ) .as ( [ Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ] ) | Import ( ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" ) ;Frame ( ) | Select ( Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ) .as ( [ Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Dystopia_Residual\" , \"Economy_GDP_per_Capita\" , \"Family\" , \"Freedom\" , \"Generosity\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" ] } } } ) | Collect ( 500 ) ;\u003cj\u003e\u003cencode\u003esynchronizeGridToRDataTable(\"FRAME882187\")\u003c/encode\u003e\u003c/j\u003e ;Frame ( ) | Select ( Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ) .as ( [ Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ] ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Dystopia_Residual\" , \"Economy_GDP_per_Capita\" , \"Family\" , \"Freedom\" , \"Generosity\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" ] } } } ) | Collect ( 500 ) ;DropRows ( Filter ( Year \u003d\u003d \"2015\" ) ) ;Frame ( ) | Select ( Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ) .as ( [ Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Dystopia_Residual\" , \"Economy_GDP_per_Capita\" , \"Family\" , \"Freedom\" , \"Generosity\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" ] } } } ) | Collect ( 500 ) ;Select ( ( ( 157 - Happiness_Rank ) + 1 ) , Happiness_Rank ) .as ( [ Inverse_Rank , Happiness_Rank ] ) | Merge ( ( Happiness_Rank , inner.join , Happiness_Rank ) ) ;Frame ( ) | Select ( Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year , Inverse_Rank ) .as ( [ Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year , Inverse_Rank ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Dystopia_Residual\" , \"Economy_GDP_per_Capita\" , \"Family\" , \"Freedom\" , \"Generosity\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" , \"Inverse_Rank\" ] } } } ) | Collect ( 500 ) ;Database ( CoutryLocal ) | Select ( name_1 , name_1__latitude ) .as ( [ name_1 , latitude ] ) | Merge ( ( Country , inner.join , name_1 ) ) ;Frame ( ) | Select ( Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Inverse_Rank , Region , Standard_Error , Trust_Government_Corruption , Year , latitude ) .as ( [ Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Inverse_Rank , Region , Standard_Error , Trust_Government_Corruption , Year , latitude ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Dystopia_Residual\" , \"Economy_GDP_per_Capita\" , \"Family\" , \"Freedom\" , \"Generosity\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Inverse_Rank\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" , \"latitude\" ] } } } ) | Collect ( 500 ) ;Database ( CoutryLocal ) | Select ( name_1 , name_1__longitude ) .as ( [ name_1 , longitude ] ) | Merge ( ( Country , inner.join , name_1 ) ) ;Frame ( ) | Select ( Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Inverse_Rank , Region , Standard_Error , Trust_Government_Corruption , Year , latitude , longitude ) .as ( [ Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Inverse_Rank , Region , Standard_Error , Trust_Government_Corruption , Year , latitude , longitude ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Dystopia_Residual\" , \"Economy_GDP_per_Capita\" , \"Family\" , \"Freedom\" , \"Generosity\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Inverse_Rank\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" , \"latitude\" , \"longitude\" ] } } } ) | Collect ( 500 ) ;if ( ( HasDuplicates ( Country , Dystopia_Residual , Economy_GDP_per_Capita , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Inverse_Rank , Region , Standard_Error , Trust_Government_Corruption , Year , latitude , longitude ) ) , ( Select ( Country , Dystopia_Residual , Economy_GDP_per_Capita , Average ( Family ) , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Inverse_Rank , Region , Standard_Error , Trust_Government_Corruption , Year , latitude , longitude ) .as ( [ Country , Dystopia_Residual , Economy_GDP_per_Capita , AverageofFamily , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Inverse_Rank , Region , Standard_Error , Trust_Government_Corruption , Year , latitude , longitude ] ) | Group ( Country , Dystopia_Residual , Economy_GDP_per_Capita , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Inverse_Rank , Region , Standard_Error , Trust_Government_Corruption , Year , latitude , longitude ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Map\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"latitude\" : [ \"Dystopia_Residual\" ] , \"longitude\" : [ \"Economy_GDP_per_Capita\" ] , \"size\" : [ \"AverageofFamily\" ] , \"tooltip\" : [ \"Freedom\" , \"Generosity\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Inverse_Rank\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" , \"latitude\" , \"longitude\" ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Inverse_Rank , Region , Standard_Error , Trust_Government_Corruption , Year , latitude , longitude ) .as ( [ Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Inverse_Rank , Region , Standard_Error , Trust_Government_Corruption , Year , latitude , longitude ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Map\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"latitude\" : [ \"Dystopia_Residual\" ] , \"longitude\" : [ \"Economy_GDP_per_Capita\" ] , \"size\" : [ \"Family\" ] , \"tooltip\" : [ \"Freedom\" , \"Generosity\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Inverse_Rank\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" , \"latitude\" , \"longitude\" ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Country , latitude , longitude ) ) , ( Select ( Country , latitude , longitude , Average ( Inverse_Rank ) ) .as ( [ Country , latitude , longitude , AverageofInverse_Rank ] ) | Group ( Country , latitude , longitude ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Map\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"latitude\" : [ \"latitude\" ] , \"longitude\" : [ \"longitude\" ] , \"size\" : [ \"AverageofInverse_Rank\" ] , \"tooltip\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , latitude , longitude , Inverse_Rank ) .as ( [ Country , latitude , longitude , Inverse_Rank ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Map\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"latitude\" : [ \"latitude\" ] , \"longitude\" : [ \"longitude\" ] , \"size\" : [ \"Inverse_Rank\" ] , \"tooltip\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Country , latitude , longitude , Region ) ) , ( Select ( Country , latitude , longitude , Average ( Inverse_Rank ) , Region ) .as ( [ Country , latitude , longitude , AverageofInverse_Rank , Region ] ) | Group ( Country , latitude , longitude , Region ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Map\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"latitude\" : [ \"latitude\" ] , \"longitude\" : [ \"longitude\" ] , \"size\" : [ \"AverageofInverse_Rank\" ] , \"tooltip\" : [ \"Region\" ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , latitude , longitude , Inverse_Rank , Region ) .as ( [ Country , latitude , longitude , Inverse_Rank , Region ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Map\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"latitude\" : [ \"latitude\" ] , \"longitude\" : [ \"longitude\" ] , \"size\" : [ \"Inverse_Rank\" ] , \"tooltip\" : [ \"Region\" ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Country , latitude , longitude , Region , Happiness_Rank ) ) , ( Select ( Country , latitude , longitude , Average ( Inverse_Rank ) , Region , Happiness_Rank ) .as ( [ Country , latitude , longitude , AverageofInverse_Rank , Region , Happiness_Rank ] ) | Group ( Country , latitude , longitude , Region , Happiness_Rank ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Map\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"latitude\" : [ \"latitude\" ] , \"longitude\" : [ \"longitude\" ] , \"size\" : [ \"AverageofInverse_Rank\" ] , \"tooltip\" : [ \"Region\" , \"Happiness_Rank\" ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , latitude , longitude , Inverse_Rank , Region , Happiness_Rank ) .as ( [ Country , latitude , longitude , Inverse_Rank , Region , Happiness_Rank ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Map\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"latitude\" : [ \"latitude\" ] , \"longitude\" : [ \"longitude\" ] , \"size\" : [ \"Inverse_Rank\" ] , \"tooltip\" : [ \"Region\" , \"Happiness_Rank\" ] } } } ) | Collect ( 500 ) ) ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"axisPointer\" : \"shadow\" , \"color\" : \"none\" , \"colorName\" : \"Semoss\" , \"colorByValue\" : [ ] , \"echartsColor\" : [ ] , \"backgroundColor\" : \"#FFFFFF\" , \"rotateAxis\" : false , \"xReversed\" : false , \"yReversed\" : false , \"lineGuide\" : true , \"lineStyle\" : { \"type\" : \"solid\" , \"width\" : 3 } , \"lineStyleArea\" : { \"type\" : \"dotted\" , \"width\" : 3 } , \"animation\" : { \"chooseType\" : \"No Animation\" , \"animationSpeed\" : 1 , \"animationDuration\" : 500 } , \"curveType\" : \"Smooth\" , \"customizeBarLabel\" : { \"position\" : \"top\" , \"rotate\" : 0 , \"align\" : \"center\" , \"fontFamily\" : \"sans-serif\" , \"fontSize\" : 12 , \"fontWeight\" : \"normal\" } , \"animationPie\" : \"None\" , \"changeSymbol\" : { \"chooseType\" : \"Circle\" , \"symbolURL\" : \"\" , \"symbolSize\" : 12 } , \"changeSymbolDendrogram\" : { \"chooseType\" : \"Empty Circle\" , \"symbolURL\" : \"\" , \"symbolSize\" : 12 } , \"customizePieLabel\" : { \"position\" : \"Outside\" , \"dimension\" : \"Name\" , \"fontSize\" : 15 , \"dynamicView\" : \"No\" } , \"customizeFunnelLabel\" : { \"showLabel\" : \"On Hover\" , \"position\" : \"Inside\" , \"dimension\" : \"Name\" , \"fontSize\" : 15 } , \"customizeSunburstLabel\" : { \"showLabel\" : \"On Hover\" , \"position\" : \"Outside\" , \"dimension\" : \"Name\" , \"fontSize\" : 15 , \"dynamicView\" : \"No\" } , \"editBarWidth\" : { \"defaultWidth\" : \"Yes\" , \"barWidth\" : \"Default\" } , \"flipOrder\" : false , \"fitToView\" : false , \"changeAlignment\" : \"center\" , \"clusterExists\" : false , \"showAdjacent\" : false , \"groupBy\" : { } , \"showDirection\" : false , \"timeSeries\" : false , \"toggleExtremes\" : false , \"toggleAverage\" : false , \"toggleArea\" : false , \"toggleAxisPointer\" : true , \"toggleGrid\" : false , \"toggleLegend\" : false , \"toggleShadow\" : false , \"toggleShape\" : true , \"toggleDonut\" : false , \"toggleLayout\" : false , \"toggleRadial\" : false , \"toggleLock\" : true , \"toggleXLabel\" : true , \"toggleZ\" : true , \"togglePolarZoom\" : \"No Zoom\" , \"toggleZoom\" : { \"toggleZoomX\" : \"No\" , \"toggleZoomY\" : \"No\" } , \"toggleTrendline\" : \"No Trendline\" , \"thresholds\" : \"none\" , \"heatmapLegend\" : \"continuous\" , \"rose\" : \"Default\" , \"colorLine\" : true , \"colorChart\" : true , \"thesholdLegend\" : true , \"xAxisThreshold\" : false , \"xMin\" : \"none\" , \"xMax\" : \"none\" , \"yMin\" : \"none\" , \"yMax\" : \"none\" , \"axisType\" : false , \"watermark\" : \"\" , \"sortField\" : \"none\" , \"sortDir\" : \"none\" , \"stackToggle\" : false , \"toggleStack\" : false , \"seriesFlipped\" : false , \"displayValues\" : false , \"yLabelFontSize\" : \"none\" , \"chloroType\" : \"State\" , \"html\" : \"\" , \"varList\" : \"\" , \"fontSize\" : \"12px\" , \"lineCurveType\" : \"Linear\" , \"showHierarchy\" : false , \"showHierarchyByUpstream\" : false , \"showHierarchyId\" : \"none\" , \"showHierarchyName\" : \"none\" , \"showParent\" : true , \"clusterSensitivity\" : 0 , \"mapColorMapping\" : { } , \"mapColorHeader\" : \"\" , \"visualizationRecommendation\" : false , \"treeDepth\" : - 1 } , \"individual\" : { } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"colorByValue\" : [ ] , \"thresholds\" : \"none\" } , \"individual\" : { \"Map\" : { \"colorByValue\" : [ ] } } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"axisPointer\" : \"shadow\" , \"color\" : \"none\" , \"colorName\" : \"Semoss\" , \"colorByValue\" : [ { \"color\" : \"#4FA4DE\" , \"highlightRow\" : false , \"colorOn\" : \"Country\" , \"show\" : false , \"global\" : true , \"layout\" : \"Map\" , \"query\" : { \"query\" : \"\" , \"selectedColumns\" : [ ] } , \"ruleId\" : \"1519924971278\" , \"isSimple\" : true , \"operators\" : [ \"\u003d\u003d\" , \"!\u003d\" , \"\u003e\" , \"\u003c\" ] , \"simple\" : { \"operator\" : \"\u003d\u003d\" , \"operators\" : [ \"\u003d\u003d\" , \"!\u003d\" ] , \"values\" : [ \"Afghanistan\" , \"Albania\" , \"Algeria\" , \"Angola\" , \"Argentina\" , \"Armenia\" , \"Australia\" , \"Austria\" , \"Azerbaijan\" , \"Bahrain\" , \"Bangladesh\" , \"Belarus\" , \"Belgium\" , \"Belize\" , \"Benin\" , \"Bhutan\" , \"Bolivia\" , \"Bosnia_and_Herzegovina\" , \"Botswana\" , \"Brazil\" , \"Bulgaria\" , \"Burkina_Faso\" , \"Burundi\" , \"Cambodia\" , \"Cameroon\" , \"Canada\" , \"Chad\" , \"Chile\" , \"China\" , \"Colombia\" , \"Comoros\" , \"Costa_Rica\" , \"Croatia\" , \"Cyprus\" , \"Czech_Republic\" , \"Denmark\" , \"Dominican_Republic\" , \"Ecuador\" , \"Egypt\" , \"El_Salvador\" , \"Estonia\" , \"Ethiopia\" , \"Finland\" , \"France\" , \"Gabon\" , \"Georgia\" , \"Germany\" , \"Ghana\" , \"Greece\" , \"Guatemala\" ] , \"task\" : \"task20\" , \"done\" : false , \"value\" : \"\" , \"header\" : \"Country\" } , \"threshold\" : { \"header\" : \"\" , \"values\" : [ ] , \"value\" : \"\" , \"name\" : \"\" } , \"valuesToColor\" : [ ] } , { \"color\" : \"#e35e71\" , \"highlightRow\" : false , \"colorOn\" : \"Region\" , \"show\" : true , \"global\" : true , \"layout\" : \"Map\" , \"query\" : { \"query\" : \"\" , \"selectedColumns\" : [ ] } , \"ruleId\" : \"1519924977938\" , \"isSimple\" : true , \"operators\" : [ \"\u003d\u003d\" , \"!\u003d\" , \"\u003e\" , \"\u003c\" ] , \"simple\" : { \"operator\" : \"\u003d\u003d\" , \"operators\" : [ \"\u003d\u003d\" , \"!\u003d\" ] , \"values\" : [ \"Australia_and_New_Zealand\" , \"Central_and_Eastern_Europe\" , \"Eastern_Asia\" , \"Latin_America_and_Caribbean\" , \"Middle_East_and_Northern_Africa\" , \"North_America\" , \"Southeastern_Asia\" , \"Southern_Asia\" , \"Sub-Saharan_Africa\" , \"Western_Europe\" ] , \"task\" : \"task23\" , \"done\" : false , \"value\" : \"Australia_and_New_Zealand\" , \"header\" : \"Region\" } , \"threshold\" : { \"header\" : \"\" , \"values\" : [ ] , \"value\" : \"\" , \"name\" : \"\" } , \"valuesToColor\" : [ \"Australia_and_New_Zealand\" ] } ] , \"echartsColor\" : [ ] , \"backgroundColor\" : \"#FFFFFF\" , \"rotateAxis\" : false , \"xReversed\" : false , \"yReversed\" : false , \"lineGuide\" : true , \"lineStyle\" : { \"width\" : 3 , \"type\" : \"solid\" } , \"lineStyleArea\" : { \"width\" : 3 , \"type\" : \"dotted\" } , \"animation\" : { \"animationSpeed\" : 1 , \"animationDuration\" : 500 , \"chooseType\" : \"No Animation\" } , \"curveType\" : \"Smooth\" , \"customizeBarLabel\" : { \"rotate\" : 0 , \"fontFamily\" : \"sans-serif\" , \"fontSize\" : 12 , \"position\" : \"top\" , \"align\" : \"center\" , \"fontWeight\" : \"normal\" } , \"animationPie\" : \"None\" , \"changeSymbol\" : { \"symbolSize\" : 12 , \"symbolURL\" : \"\" , \"chooseType\" : \"Circle\" } , \"changeSymbolDendrogram\" : { \"symbolSize\" : 12 , \"symbolURL\" : \"\" , \"chooseType\" : \"Empty Circle\" } , \"customizePieLabel\" : { \"dynamicView\" : \"No\" , \"fontSize\" : 15 , \"position\" : \"Outside\" , \"dimension\" : \"Name\" } , \"customizeFunnelLabel\" : { \"fontSize\" : 15 , \"position\" : \"Inside\" , \"dimension\" : \"Name\" , \"showLabel\" : \"On Hover\" } , \"customizeSunburstLabel\" : { \"dynamicView\" : \"No\" , \"fontSize\" : 15 , \"position\" : \"Outside\" , \"dimension\" : \"Name\" , \"showLabel\" : \"On Hover\" } , \"editBarWidth\" : { \"barWidth\" : \"Default\" , \"defaultWidth\" : \"Yes\" } , \"flipOrder\" : false , \"fitToView\" : false , \"changeAlignment\" : \"center\" , \"clusterExists\" : false , \"showAdjacent\" : false , \"groupBy\" : { } , \"showDirection\" : false , \"timeSeries\" : false , \"toggleExtremes\" : false , \"toggleAverage\" : false , \"toggleArea\" : false , \"toggleAxisPointer\" : true , \"toggleGrid\" : false , \"toggleLegend\" : false , \"toggleShadow\" : false , \"toggleShape\" : true , \"toggleDonut\" : false , \"toggleLayout\" : false , \"toggleRadial\" : false , \"toggleLock\" : true , \"toggleXLabel\" : true , \"toggleZ\" : true , \"togglePolarZoom\" : \"No Zoom\" , \"toggleZoom\" : { \"toggleZoomX\" : \"No\" , \"toggleZoomY\" : \"No\" } , \"toggleTrendline\" : \"No Trendline\" , \"thresholds\" : \"none\" , \"heatmapLegend\" : \"continuous\" , \"rose\" : \"Default\" , \"colorLine\" : true , \"colorChart\" : true , \"thesholdLegend\" : true , \"xAxisThreshold\" : false , \"xMin\" : \"none\" , \"xMax\" : \"none\" , \"yMin\" : \"none\" , \"yMax\" : \"none\" , \"axisType\" : false , \"watermark\" : \"\" , \"sortField\" : \"none\" , \"sortDir\" : \"none\" , \"stackToggle\" : false , \"toggleStack\" : false , \"seriesFlipped\" : false , \"displayValues\" : false , \"yLabelFontSize\" : \"none\" , \"chloroType\" : \"State\" , \"html\" : \"\" , \"varList\" : \"\" , \"fontSize\" : \"12px\" , \"lineCurveType\" : \"Linear\" , \"showHierarchy\" : false , \"showHierarchyByUpstream\" : false , \"showHierarchyId\" : \"none\" , \"showHierarchyName\" : \"none\" , \"showParent\" : true , \"clusterSensitivity\" : 0 , \"mapColorMapping\" : { } , \"mapColorHeader\" : \"\" , \"visualizationRecommendation\" : false , \"treeDepth\" : - 1 } , \"individual\" : { \"Grid\" : { } , \"Map\" : { \"colorByValue\" : [ ] } } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"axisPointer\" : \"shadow\" , \"color\" : \"none\" , \"colorName\" : \"Semoss\" , \"colorByValue\" : [ { \"color\" : \"#4FA4DE\" , \"query\" : { \"selectedColumns\" : [ ] , \"query\" : \"\" } , \"valuesToColor\" : [ ] , \"show\" : false , \"global\" : true , \"simple\" : { \"task\" : \"task20\" , \"operators\" : [ \"\u003d\u003d\" , \"!\u003d\" ] , \"values\" : [ \"Afghanistan\" , \"Albania\" , \"Algeria\" , \"Angola\" , \"Argentina\" , \"Armenia\" , \"Australia\" , \"Austria\" , \"Azerbaijan\" , \"Bahrain\" , \"Bangladesh\" , \"Belarus\" , \"Belgium\" , \"Belize\" , \"Benin\" , \"Bhutan\" , \"Bolivia\" , \"Bosnia_and_Herzegovina\" , \"Botswana\" , \"Brazil\" , \"Bulgaria\" , \"Burkina_Faso\" , \"Burundi\" , \"Cambodia\" , \"Cameroon\" , \"Canada\" , \"Chad\" , \"Chile\" , \"China\" , \"Colombia\" , \"Comoros\" , \"Costa_Rica\" , \"Croatia\" , \"Cyprus\" , \"Czech_Republic\" , \"Denmark\" , \"Dominican_Republic\" , \"Ecuador\" , \"Egypt\" , \"El_Salvador\" , \"Estonia\" , \"Ethiopia\" , \"Finland\" , \"France\" , \"Gabon\" , \"Georgia\" , \"Germany\" , \"Ghana\" , \"Greece\" , \"Guatemala\" ] , \"header\" : \"Country\" , \"done\" : false , \"value\" : \"\" , \"operator\" : \"\u003d\u003d\" } , \"threshold\" : { \"values\" : [ ] , \"name\" : \"\" , \"header\" : \"\" , \"value\" : \"\" } , \"layout\" : \"Map\" , \"highlightRow\" : false , \"operators\" : [ \"\u003d\u003d\" , \"!\u003d\" , \"\u003e\" , \"\u003c\" ] , \"isSimple\" : true , \"colorOn\" : \"Country\" , \"ruleId\" : \"1519924971278\" } ] , \"echartsColor\" : [ ] , \"backgroundColor\" : \"#FFFFFF\" , \"rotateAxis\" : false , \"xReversed\" : false , \"yReversed\" : false , \"lineGuide\" : true , \"lineStyle\" : { \"width\" : 3 , \"type\" : \"solid\" } , \"lineStyleArea\" : { \"width\" : 3 , \"type\" : \"dotted\" } , \"animation\" : { \"animationSpeed\" : 1 , \"animationDuration\" : 500 , \"chooseType\" : \"No Animation\" } , \"curveType\" : \"Smooth\" , \"customizeBarLabel\" : { \"rotate\" : 0 , \"fontFamily\" : \"sans-serif\" , \"fontSize\" : 12 , \"position\" : \"top\" , \"align\" : \"center\" , \"fontWeight\" : \"normal\" } , \"animationPie\" : \"None\" , \"changeSymbol\" : { \"symbolSize\" : 12 , \"symbolURL\" : \"\" , \"chooseType\" : \"Circle\" } , \"changeSymbolDendrogram\" : { \"symbolSize\" : 12 , \"symbolURL\" : \"\" , \"chooseType\" : \"Empty Circle\" } , \"customizePieLabel\" : { \"dynamicView\" : \"No\" , \"fontSize\" : 15 , \"position\" : \"Outside\" , \"dimension\" : \"Name\" } , \"customizeFunnelLabel\" : { \"fontSize\" : 15 , \"position\" : \"Inside\" , \"dimension\" : \"Name\" , \"showLabel\" : \"On Hover\" } , \"customizeSunburstLabel\" : { \"dynamicView\" : \"No\" , \"fontSize\" : 15 , \"position\" : \"Outside\" , \"dimension\" : \"Name\" , \"showLabel\" : \"On Hover\" } , \"editBarWidth\" : { \"barWidth\" : \"Default\" , \"defaultWidth\" : \"Yes\" } , \"flipOrder\" : false , \"fitToView\" : false , \"changeAlignment\" : \"center\" , \"clusterExists\" : false , \"showAdjacent\" : false , \"groupBy\" : { } , \"showDirection\" : false , \"timeSeries\" : false , \"toggleExtremes\" : false , \"toggleAverage\" : false , \"toggleArea\" : false , \"toggleAxisPointer\" : true , \"toggleGrid\" : false , \"toggleLegend\" : false , \"toggleShadow\" : false , \"toggleShape\" : true , \"toggleDonut\" : false , \"toggleLayout\" : false , \"toggleRadial\" : false , \"toggleLock\" : true , \"toggleXLabel\" : true , \"toggleZ\" : true , \"togglePolarZoom\" : \"No Zoom\" , \"toggleZoom\" : { \"toggleZoomX\" : \"No\" , \"toggleZoomY\" : \"No\" } , \"toggleTrendline\" : \"No Trendline\" , \"thresholds\" : \"none\" , \"heatmapLegend\" : \"continuous\" , \"rose\" : \"Default\" , \"colorLine\" : true , \"colorChart\" : true , \"thesholdLegend\" : true , \"xAxisThreshold\" : false , \"xMin\" : \"none\" , \"xMax\" : \"none\" , \"yMin\" : \"none\" , \"yMax\" : \"none\" , \"axisType\" : false , \"watermark\" : \"\" , \"sortField\" : \"none\" , \"sortDir\" : \"none\" , \"stackToggle\" : false , \"toggleStack\" : false , \"seriesFlipped\" : false , \"displayValues\" : false , \"yLabelFontSize\" : \"none\" , \"chloroType\" : \"State\" , \"html\" : \"\" , \"varList\" : \"\" , \"fontSize\" : \"12px\" , \"lineCurveType\" : \"Linear\" , \"showHierarchy\" : false , \"showHierarchyByUpstream\" : false , \"showHierarchyId\" : \"none\" , \"showHierarchyName\" : \"none\" , \"showParent\" : true , \"clusterSensitivity\" : 0 , \"mapColorMapping\" : { } , \"mapColorHeader\" : \"\" , \"visualizationRecommendation\" : false , \"treeDepth\" : - 1 } , \"individual\" : { \"colorByValue\" : [ ] } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"colorByValue\" : [ ] , \"thresholds\" : \"none\" } , \"individual\" : { \"Map\" : { \"colorByValue\" : [ ] } } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"individual\" : { \"Map\" : { \"highlightMaps\" : 5 } } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"individual\" : { \"Map\" : { \"highlightMaps\" : 5 } } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools\" ) ;Panel ( 0 ) | SetPanelLabel ( \u0027World Happiness Map\u0027 ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"showMenu\" : true } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"showMenu\" ) ;Panel(0)|AddPanelOrnaments({\"showMenu\":true});Panel(0)|RetrievePanelOrnaments(\"showMenu\");"
}