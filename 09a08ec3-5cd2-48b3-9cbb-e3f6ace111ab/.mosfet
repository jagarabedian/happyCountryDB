{
  "layout": "Grid",
  "image": "image.png",
  "rdbmsId": "09a08ec3-5cd2-48b3-9cbb-e3f6ace111ab",
  "hidden": false,
  "engine": "happyCountryDB",
  "insightName": "GDP 2013-2016",
  "recipe": "AddPanel ( 0 ) ;Panel ( 0 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eUnfilterFrame(\u003cSelectedColumn\u003e);\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabledVisuals\" : [ \"Grid\" ] , \"disabled\" : false } ] } , \"onBrush\" : { \"Filter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eif(IsEmpty(\u003cSelectedValues\u003e), UnfilterFrame(\u003cSelectedColumn\u003e), SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabled\" : false } ] } } ) ;Panel ( 0 ) | RetrievePanelEvents ( ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"echarts\"}\u003c/encode\u003e\" ) ;Panel ( 0 ) | SetPanelView ( \"federate-view\" , \"\u003cencode\u003e{\"core_engine\":\"happyCountryDB\"}\u003c/encode\u003e\" ) ;CreateFrame ( grid ) .as ( [ \u0027FRAME266584\u0027 ] ) ;Database ( happyCountryDB ) | Select ( Country , Country__Dystopia_Residual , Country__Economy_GDP_per_Capita , Country__Family , Country__Freedom , Country__Generosity , Country__Happiness_Rank , Country__Happiness_Score , Country__Health_Life_Expectancy , Country__Region , Country__Standard_Error , Country__Trust_Government_Corruption , Country__Year ) .as ( [ Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ] ) | Import ( ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" ) ;Frame ( ) | Select ( Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ) .as ( [ Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Dystopia_Residual\" , \"Economy_GDP_per_Capita\" , \"Family\" , \"Freedom\" , \"Generosity\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" ] } } } ) | Collect ( 500 ) ;\u003cj\u003e\u003cencode\u003esynchronizeGridToRDataTable(\"FRAME266584\")\u003c/encode\u003e\u003c/j\u003e ;Frame ( ) | Select ( Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ) .as ( [ Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ] ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Dystopia_Residual\" , \"Economy_GDP_per_Capita\" , \"Family\" , \"Freedom\" , \"Generosity\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" ] } } } ) | Collect ( 500 ) ;DropRows ( Filter ( Year \u003d\u003d \"2015\" ) ) ;Frame ( ) | Select ( Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ) .as ( [ Country , Dystopia_Residual , Economy_GDP_per_Capita , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Dystopia_Residual\" , \"Economy_GDP_per_Capita\" , \"Family\" , \"Freedom\" , \"Generosity\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" ] } } } ) | Collect ( 500 ) ;DropColumn ( \"Economy_GDP_per_Capita\" ) ;Frame ( ) | Select ( Country , Dystopia_Residual , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ) .as ( [ Country , Dystopia_Residual , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ] ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Dystopia_Residual\" , \"Family\" , \"Freedom\" , \"Generosity\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" ] } } } ) | Collect ( 500 ) ;DropColumn ( \"Dystopia_Residual\" ) ;Frame ( ) | Select ( Country , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ) .as ( [ Country , Family , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ] ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Family\" , \"Freedom\" , \"Generosity\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" ] } } } ) | Collect ( 500 ) ;DropColumn ( \"Family\" ) ;Frame ( ) | Select ( Country , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ) .as ( [ Country , Freedom , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ] ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Freedom\" , \"Generosity\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" ] } } } ) | Collect ( 500 ) ;DropColumn ( \"Freedom\" ) ;Frame ( ) | Select ( Country , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ) .as ( [ Country , Generosity , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ] ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Generosity\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" ] } } } ) | Collect ( 500 ) ;DropColumn ( \"Generosity\" ) ;Frame ( ) | Select ( Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ) .as ( [ Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Standard_Error , Trust_Government_Corruption , Year ] ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Standard_Error\" , \"Trust_Government_Corruption\" , \"Year\" ] } } } ) | Collect ( 500 ) ;DropColumn ( \"Standard_Error\" ) ;Frame ( ) | Select ( Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Trust_Government_Corruption , Year ) .as ( [ Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Trust_Government_Corruption , Year ] ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Trust_Government_Corruption\" , \"Year\" ] } } } ) | Collect ( 500 ) ;DropColumn ( \"Trust_Government_Corruption\" ) ;Frame ( ) | Select ( Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Year ) .as ( [ Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Year ] ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Year\" ] } } } ) | Collect ( 500 ) ;Database ( GDPPC ) | Select ( Country_Name , Country_Name__A2010 ) .as ( [ Country_Name , A2010 ] ) | Merge ( ( Country , inner.join , Country_Name ) ) ;Frame ( ) | Select ( A2010 , Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Year ) .as ( [ A2010 , Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Year ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"A2010\" , \"Country\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Year\" ] } } } ) | Collect ( 500 ) ;Database ( GDPPC ) | Select ( Country_Name , Country_Name__A2011 ) .as ( [ Country_Name , A2011 ] ) | Merge ( ( Country , inner.join , Country_Name ) ) ;Frame ( ) | Select ( A2010 , A2011 , Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Year ) .as ( [ A2010 , A2011 , Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Year ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"A2010\" , \"A2011\" , \"Country\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Year\" ] } } } ) | Collect ( 500 ) ;Database ( GDPPC ) | Select ( Country_Name , Country_Name__A2013 ) .as ( [ Country_Name , A2013 ] ) | Merge ( ( Country , inner.join , Country_Name ) ) ;Frame ( ) | Select ( A2010 , A2011 , A2013 , Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Year ) .as ( [ A2010 , A2011 , A2013 , Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Year ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"A2010\" , \"A2011\" , \"A2013\" , \"Country\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Year\" ] } } } ) | Collect ( 500 ) ;Database ( GDPPC ) | Select ( Country_Name , Country_Name__A2014 ) .as ( [ Country_Name , A2014 ] ) | Merge ( ( Country , inner.join , Country_Name ) ) ;Frame ( ) | Select ( A2010 , A2011 , A2013 , A2014 , Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Year ) .as ( [ A2010 , A2011 , A2013 , A2014 , Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Year ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"A2010\" , \"A2011\" , \"A2013\" , \"A2014\" , \"Country\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Year\" ] } } } ) | Collect ( 500 ) ;Database ( GDPPC ) | Select ( Country_Name , Country_Name__A2015 ) .as ( [ Country_Name , A2015 ] ) | Merge ( ( Country , inner.join , Country_Name ) ) ;Frame ( ) | Select ( A2010 , A2011 , A2013 , A2014 , A2015 , Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Year ) .as ( [ A2010 , A2011 , A2013 , A2014 , A2015 , Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Year ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"A2010\" , \"A2011\" , \"A2013\" , \"A2014\" , \"A2015\" , \"Country\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Year\" ] } } } ) | Collect ( 500 ) ;Database ( GDPPC ) | Select ( Country_Name , Country_Name__A2016 ) .as ( [ Country_Name , A2016 ] ) | Merge ( ( Country , inner.join , Country_Name ) ) ;Frame ( ) | Select ( A2010 , A2011 , A2013 , A2014 , A2015 , A2016 , Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Year ) .as ( [ A2010 , A2011 , A2013 , A2014 , A2015 , A2016 , Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Year ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"A2010\" , \"A2011\" , \"A2013\" , \"A2014\" , \"A2015\" , \"A2016\" , \"Country\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Year\" ] } } } ) | Collect ( 500 ) ;if ( ( HasDuplicates ( A2010 ) ) , ( Select ( A2010 , Average ( A2011 ) , Average ( A2013 ) , Average ( A2014 ) , UniqueGroupConcat ( A2015 ) ) .as ( [ A2010 , AverageofA2011 , AverageofA2013 , AverageofA2014 , UniqueGroupConcatofA2015 ] ) | Group ( A2010 ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Scatter\" , \"alignment\" : { \"label\" : [ \"A2010\" ] , \"x\" : [ \"AverageofA2011\" ] , \"y\" : [ \"AverageofA2013\" ] , \"z\" : [ \"AverageofA2014\" ] , \"series\" : [ \"UniqueGroupConcatofA2015\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( A2010 , A2011 , A2013 , A2014 , A2015 ) .as ( [ A2010 , A2011 , A2013 , A2014 , A2015 ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Scatter\" , \"alignment\" : { \"label\" : [ \"A2010\" ] , \"x\" : [ \"A2011\" ] , \"y\" : [ \"A2013\" ] , \"z\" : [ \"A2014\" ] , \"series\" : [ \"A2015\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Average ( Happiness_Rank ) , Average ( A2016 ) ) .as ( [ Country , AverageofHappiness_Rank , AverageofA2016 ] ) | Group ( Country ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Scatter\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"x\" : [ \"AverageofHappiness_Rank\" ] , \"y\" : [ \"AverageofA2016\" ] , \"z\" : [ ] , \"series\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , Happiness_Rank , A2016 ) .as ( [ Country , Happiness_Rank , A2016 ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Scatter\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"x\" : [ \"Happiness_Rank\" ] , \"y\" : [ \"A2016\" ] , \"z\" : [ ] , \"series\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Average ( Happiness_Rank ) , Average ( A2016 ) , UniqueGroupConcat ( Region ) ) .as ( [ Country , AverageofHappiness_Rank , AverageofA2016 , UniqueGroupConcatofRegion ] ) | Group ( Country ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Scatter\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"x\" : [ \"AverageofHappiness_Rank\" ] , \"y\" : [ \"AverageofA2016\" ] , \"z\" : [ ] , \"series\" : [ \"UniqueGroupConcatofRegion\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , Happiness_Rank , A2016 , Region ) .as ( [ Country , Happiness_Rank , A2016 , Region ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Scatter\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"x\" : [ \"Happiness_Rank\" ] , \"y\" : [ \"A2016\" ] , \"z\" : [ ] , \"series\" : [ \"Region\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleLegend\" : true } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.toggleLegend\" ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Average ( Happiness_Rank ) , Average ( A2016 ) , Count ( Region ) ) .as ( [ Country , AverageofHappiness_Rank , AverageofA2016 , CountofRegion ] ) | Group ( Country ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"AverageofHappiness_Rank\" , \"AverageofA2016\" , \"CountofRegion\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , Happiness_Rank , A2016 , Count ( Region ) ) .as ( [ Country , Happiness_Rank , A2016 , CountofRegion ] ) | Group ( Country ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"Happiness_Rank\" , \"A2016\" , \"CountofRegion\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Count ( Happiness_Rank ) , Average ( A2016 ) ) .as ( [ Country , CountofHappiness_Rank , AverageofA2016 ] ) | Group ( Country ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"CountofHappiness_Rank\" , \"AverageofA2016\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , Count ( Happiness_Rank ) , A2016 ) .as ( [ Country , CountofHappiness_Rank , A2016 ] ) | Group ( Country ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"CountofHappiness_Rank\" , \"A2016\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Average ( A2010 ) ) .as ( [ Country , AverageofA2010 ] ) | Group ( Country ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"AverageofA2010\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , A2010 ) .as ( [ Country , A2010 ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"A2010\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Average ( A2010 ) , Average ( A2011 ) ) .as ( [ Country , AverageofA2010 , AverageofA2011 ] ) | Group ( Country ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"AverageofA2010\" , \"AverageofA2011\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , A2010 , A2011 ) .as ( [ Country , A2010 , A2011 ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"A2010\" , \"A2011\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Average ( A2011 ) ) .as ( [ Country , AverageofA2011 ] ) | Group ( Country ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"AverageofA2011\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , A2011 ) .as ( [ Country , A2011 ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"A2011\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Average ( A2011 ) , Average ( A2013 ) ) .as ( [ Country , AverageofA2011 , AverageofA2013 ] ) | Group ( Country ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"AverageofA2011\" , \"AverageofA2013\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , A2011 , A2013 ) .as ( [ Country , A2011 , A2013 ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"A2011\" , \"A2013\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Average ( A2011 ) , Average ( A2013 ) , Average ( A2014 ) ) .as ( [ Country , AverageofA2011 , AverageofA2013 , AverageofA2014 ] ) | Group ( Country ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"AverageofA2011\" , \"AverageofA2013\" , \"AverageofA2014\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , A2011 , A2013 , A2014 ) .as ( [ Country , A2011 , A2013 , A2014 ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"A2011\" , \"A2013\" , \"A2014\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Average ( A2013 ) , Average ( A2014 ) ) .as ( [ Country , AverageofA2013 , AverageofA2014 ] ) | Group ( Country ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"AverageofA2013\" , \"AverageofA2014\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , A2013 , A2014 ) .as ( [ Country , A2013 , A2014 ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"A2013\" , \"A2014\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Average ( A2013 ) , Average ( A2014 ) , Average ( A2015 ) ) .as ( [ Country , AverageofA2013 , AverageofA2014 , AverageofA2015 ] ) | Group ( Country ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"AverageofA2013\" , \"AverageofA2014\" , \"AverageofA2015\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , A2013 , A2014 , A2015 ) .as ( [ Country , A2013 , A2014 , A2015 ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"A2013\" , \"A2014\" , \"A2015\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Average ( A2013 ) , Average ( A2014 ) , Average ( A2015 ) , Average ( A2016 ) ) .as ( [ Country , AverageofA2013 , AverageofA2014 , AverageofA2015 , AverageofA2016 ] ) | Group ( Country ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"AverageofA2013\" , \"AverageofA2014\" , \"AverageofA2015\" , \"AverageofA2016\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , A2013 , A2014 , A2015 , A2016 ) .as ( [ Country , A2013 , A2014 , A2015 , A2016 ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"A2013\" , \"A2014\" , \"A2015\" , \"A2016\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"displayValues\" : true } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.displayValues\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"displayValues\" : false } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.displayValues\" ) ;Frame ( ) | Select ( A2010 , A2011 , A2013 , A2014 , A2015 , A2016 , Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Year ) .as ( [ A2010 , A2011 , A2013 , A2014 , A2015 , A2016 , Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Year ] ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"A2010\" , \"A2011\" , \"A2013\" , \"A2014\" , \"A2015\" , \"A2016\" , \"Country\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Year\" ] } } } ) | Collect ( 500 ) ;ReplaceFrameFilter ( ( Happiness_Rank \u003e\u003d 4 ) ) ;Frame ( ) | Select ( A2010 , A2011 , A2013 , A2014 , A2015 , A2016 , Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Year ) .as ( [ A2010 , A2011 , A2013 , A2014 , A2015 , A2016 , Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Year ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"A2010\" , \"A2011\" , \"A2013\" , \"A2014\" , \"A2015\" , \"A2016\" , \"Country\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Year\" ] } } } ) | Collect ( 500 ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Average ( A2013 ) , Average ( A2014 ) , Average ( A2015 ) , Average ( A2016 ) ) .as ( [ Country , AverageofA2013 , AverageofA2014 , AverageofA2015 , AverageofA2016 ] ) | Group ( Country ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"AverageofA2013\" , \"AverageofA2014\" , \"AverageofA2015\" , \"AverageofA2016\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , A2013 , A2014 , A2015 , A2016 ) .as ( [ Country , A2013 , A2014 , A2015 , A2016 ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"A2013\" , \"A2014\" , \"A2015\" , \"A2016\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;ReplaceFrameFilter ( ( A2010 \u003d\u003d [ ] ) ) ;Frame ( ) | Select ( Country , A2013 , A2014 , A2015 , A2016 ) .as ( [ Country , A2013 , A2014 , A2015 , A2016 ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"A2013\" , \"A2014\" , \"A2015\" , \"A2016\" ] } } } ) | Collect ( 500 ) ;DeleteFrameFilter ( index \u003d [ 0 ] ) ;Frame ( ) | Select ( Country , A2013 , A2014 , A2015 , A2016 ) .as ( [ Country , A2013 , A2014 , A2015 , A2016 ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"A2013\" , \"A2014\" , \"A2015\" , \"A2016\" ] } } } ) | Collect ( 500 ) ;ReplaceFrameFilter ( ( Happiness_Rank \u003c\u003d 4 ) ) ;Frame ( ) | Select ( Country , A2013 , A2014 , A2015 , A2016 ) .as ( [ Country , A2013 , A2014 , A2015 , A2016 ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"A2013\" , \"A2014\" , \"A2015\" , \"A2016\" ] } } } ) | Collect ( 500 ) ;Frame ( ) | Select ( A2010 , A2011 , A2013 , A2014 , A2015 , A2016 , Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Year ) .as ( [ A2010 , A2011 , A2013 , A2014 , A2015 , A2016 , Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Year ] ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"A2010\" , \"A2011\" , \"A2013\" , \"A2014\" , \"A2015\" , \"A2016\" , \"Country\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Year\" ] } } } ) | Collect ( 500 ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"showMenu\" : true } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"showMenu\" ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Average ( A2013 ) , Average ( A2014 ) , Average ( A2015 ) , Average ( A2016 ) ) .as ( [ Country , AverageofA2013 , AverageofA2014 , AverageofA2015 , AverageofA2016 ] ) | Group ( Country ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"AverageofA2013\" , \"AverageofA2014\" , \"AverageofA2015\" , \"AverageofA2016\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , A2013 , A2014 , A2015 , A2016 ) .as ( [ Country , A2013 , A2014 , A2015 , A2016 ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"A2013\" , \"A2014\" , \"A2015\" , \"A2016\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;Panel ( 0 ) | SetPanelLabel ( \u0027GDP 2013-2016\u0027 ) ;Frame ( ) | Select ( A2010 , A2011 , A2013 , A2014 , A2015 , A2016 , Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Year ) .as ( [ A2010 , A2011 , A2013 , A2014 , A2015 , A2016 , Country , Happiness_Rank , Happiness_Score , Health_Life_Expectancy , Region , Year ] ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"A2010\" , \"A2011\" , \"A2013\" , \"A2014\" , \"A2015\" , \"A2016\" , \"Country\" , \"Happiness_Rank\" , \"Happiness_Score\" , \"Health_Life_Expectancy\" , \"Region\" , \"Year\" ] } } } ) | Collect ( 500 ) ;Panel(0)|AddPanelOrnaments({\"showMenu\":true});Panel(0)|RetrievePanelOrnaments(\"showMenu\");"
}